<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygjt.gdn.ftisp.persistence.RoleDao">
     <resultMap id="BaseResultMap" type="com.ygjt.gdn.ftisp.model.RoleDo">
          <id column="ID" jdbcType="INTEGER" property="id" />
          <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
          <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
          <result column="ENABLE" jdbcType="INTEGER" property="enable" />
          <result column="ISSYS" jdbcType="INTEGER" property="issys" />
          <result column="MODULE_ID" jdbcType="VARCHAR" property="moduleId" />
          <result column="create_dt" jdbcType="TIMESTAMP" property="createDt" />
          <result column="create_by" jdbcType="INTEGER" property="createBy" />
          <result column="last_update_dt" jdbcType="TIMESTAMP" property="lastUpdateDt" />
          <result column="last_update_by" jdbcType="INTEGER" property="lastUpdateBy" />
          <result column="sts" jdbcType="CHAR" property="sts" />
          <result column="SYSTEM_ID" jdbcType="INTEGER" property="systemId" />
     </resultMap>
     <sql id="Query_Where_Clause">
          <where>
               <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                         <trim prefix="(" prefixOverrides="and" suffix=")">
                              <foreach collection="criteria.criteria" item="criterion">
                                   <choose>
                                        <when test="criterion.noValue">
                                             and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                             and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                             and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                             and ${criterion.condition}
                                             <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                                  #{listItem}
                                             </foreach>
                                        </when>
                                   </choose>
                              </foreach>
                         </trim>
                    </if>
               </foreach>
          </where>
     </sql>
     <sql id="Update_By_Query_Where_Clause">
          <where>
               <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                         <trim prefix="(" prefixOverrides="and" suffix=")">
                              <foreach collection="criteria.criteria" item="criterion">
                                   <choose>
                                        <when test="criterion.noValue">
                                             and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                             and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                             and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                             and ${criterion.condition}
                                             <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                                  #{listItem}
                                             </foreach>
                                        </when>
                                   </choose>
                              </foreach>
                         </trim>
                    </if>
               </foreach>
          </where>
     </sql>
     <sql id="Base_Column_List">
          ID, ROLE_NAME, ROLE_DESC, ENABLE, ISSYS, MODULE_ID, create_dt, create_by, last_update_dt, 
          last_update_by, sts, SYSTEM_ID
     </sql>
     <select id="selectByQuery" parameterType="com.ygjt.gdn.ftisp.model.Query.RoleQuery" resultMap="BaseResultMap">
          select
          <if test="distinct">
               distinct
          </if>
          <include refid="Base_Column_List" />
          from auth_role
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
          <if test="orderByClause != null">
               order by ${orderByClause}
          </if>
     </select>
     <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
          select 
          <include refid="Base_Column_List" />
          from auth_role
          where ID = #{id,jdbcType=INTEGER}
     </select>
     <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
          delete from auth_role
          where ID = #{id,jdbcType=INTEGER}
     </delete>
     <delete id="deleteByQuery" parameterType="com.ygjt.gdn.ftisp.model.Query.RoleQuery">
          delete from auth_role
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
     </delete>
     <insert id="insert" parameterType="com.ygjt.gdn.ftisp.model.RoleDo">
          <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
               SELECT LAST_INSERT_ID()
          </selectKey>
          insert into auth_role (ROLE_NAME, ROLE_DESC, ENABLE, 
               ISSYS, MODULE_ID, create_dt, 
               create_by, last_update_dt, last_update_by, 
               sts, SYSTEM_ID)
          values (#{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, 
               #{issys,jdbcType=INTEGER}, #{moduleId,jdbcType=VARCHAR}, #{createDt,jdbcType=TIMESTAMP}, 
               #{createBy,jdbcType=INTEGER}, #{lastUpdateDt,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=INTEGER}, 
               #{sts,jdbcType=CHAR}, #{systemId,jdbcType=INTEGER})
     </insert>
     <insert id="insertSelective" parameterType="com.ygjt.gdn.ftisp.model.RoleDo">
          <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
               SELECT LAST_INSERT_ID()
          </selectKey>
          insert into auth_role
          <trim prefix="(" suffix=")" suffixOverrides=",">
               <if test="roleName != null">
                    ROLE_NAME,
               </if>
               <if test="roleDesc != null">
                    ROLE_DESC,
               </if>
               <if test="enable != null">
                    ENABLE,
               </if>
               <if test="issys != null">
                    ISSYS,
               </if>
               <if test="moduleId != null">
                    MODULE_ID,
               </if>
               <if test="createDt != null">
                    create_dt,
               </if>
               <if test="createBy != null">
                    create_by,
               </if>
               <if test="lastUpdateDt != null">
                    last_update_dt,
               </if>
               <if test="lastUpdateBy != null">
                    last_update_by,
               </if>
               <if test="sts != null">
                    sts,
               </if>
               <if test="systemId != null">
                    SYSTEM_ID,
               </if>
          </trim>
          <trim prefix="values (" suffix=")" suffixOverrides=",">
               <if test="roleName != null">
                    #{roleName,jdbcType=VARCHAR},
               </if>
               <if test="roleDesc != null">
                    #{roleDesc,jdbcType=VARCHAR},
               </if>
               <if test="enable != null">
                    #{enable,jdbcType=INTEGER},
               </if>
               <if test="issys != null">
                    #{issys,jdbcType=INTEGER},
               </if>
               <if test="moduleId != null">
                    #{moduleId,jdbcType=VARCHAR},
               </if>
               <if test="createDt != null">
                    #{createDt,jdbcType=TIMESTAMP},
               </if>
               <if test="createBy != null">
                    #{createBy,jdbcType=INTEGER},
               </if>
               <if test="lastUpdateDt != null">
                    #{lastUpdateDt,jdbcType=TIMESTAMP},
               </if>
               <if test="lastUpdateBy != null">
                    #{lastUpdateBy,jdbcType=INTEGER},
               </if>
               <if test="sts != null">
                    #{sts,jdbcType=CHAR},
               </if>
               <if test="systemId != null">
                    #{systemId,jdbcType=INTEGER},
               </if>
          </trim>
     </insert>
     <select id="countByQuery" parameterType="com.ygjt.gdn.ftisp.model.Query.RoleQuery" resultType="java.lang.Long">
          select count(*) from auth_role
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
     </select>
     <update id="updateByQuerySelective" parameterType="map">
          update auth_role
          <set>
               <if test="record.id != null">
                    ID = #{record.id,jdbcType=INTEGER},
               </if>
               <if test="record.roleName != null">
                    ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
               </if>
               <if test="record.roleDesc != null">
                    ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
               </if>
               <if test="record.enable != null">
                    ENABLE = #{record.enable,jdbcType=INTEGER},
               </if>
               <if test="record.issys != null">
                    ISSYS = #{record.issys,jdbcType=INTEGER},
               </if>
               <if test="record.moduleId != null">
                    MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
               </if>
               <if test="record.createDt != null">
                    create_dt = #{record.createDt,jdbcType=TIMESTAMP},
               </if>
               <if test="record.createBy != null">
                    create_by = #{record.createBy,jdbcType=INTEGER},
               </if>
               <if test="record.lastUpdateDt != null">
                    last_update_dt = #{record.lastUpdateDt,jdbcType=TIMESTAMP},
               </if>
               <if test="record.lastUpdateBy != null">
                    last_update_by = #{record.lastUpdateBy,jdbcType=INTEGER},
               </if>
               <if test="record.sts != null">
                    sts = #{record.sts,jdbcType=CHAR},
               </if>
               <if test="record.systemId != null">
                    SYSTEM_ID = #{record.systemId,jdbcType=INTEGER},
               </if>
          </set>
          <if test="_parameter != null">
               <include refid="Update_By_Query_Where_Clause" />
          </if>
     </update>
     <update id="updateByQuery" parameterType="map">
          update auth_role
          set ID = #{record.id,jdbcType=INTEGER},
               ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
               ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
               ENABLE = #{record.enable,jdbcType=INTEGER},
               ISSYS = #{record.issys,jdbcType=INTEGER},
               MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
               create_dt = #{record.createDt,jdbcType=TIMESTAMP},
               create_by = #{record.createBy,jdbcType=INTEGER},
               last_update_dt = #{record.lastUpdateDt,jdbcType=TIMESTAMP},
               last_update_by = #{record.lastUpdateBy,jdbcType=INTEGER},
               sts = #{record.sts,jdbcType=CHAR},
               SYSTEM_ID = #{record.systemId,jdbcType=INTEGER}
          <if test="_parameter != null">
               <include refid="Update_By_Query_Where_Clause" />
          </if>
     </update>
     <update id="updateByPrimaryKeySelective" parameterType="com.ygjt.gdn.ftisp.model.RoleDo">
          update auth_role
          <set>
               <if test="roleName != null">
                    ROLE_NAME = #{roleName,jdbcType=VARCHAR},
               </if>
               <if test="roleDesc != null">
                    ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
               </if>
               <if test="enable != null">
                    ENABLE = #{enable,jdbcType=INTEGER},
               </if>
               <if test="issys != null">
                    ISSYS = #{issys,jdbcType=INTEGER},
               </if>
               <if test="moduleId != null">
                    MODULE_ID = #{moduleId,jdbcType=VARCHAR},
               </if>
               <if test="createDt != null">
                    create_dt = #{createDt,jdbcType=TIMESTAMP},
               </if>
               <if test="createBy != null">
                    create_by = #{createBy,jdbcType=INTEGER},
               </if>
               <if test="lastUpdateDt != null">
                    last_update_dt = #{lastUpdateDt,jdbcType=TIMESTAMP},
               </if>
               <if test="lastUpdateBy != null">
                    last_update_by = #{lastUpdateBy,jdbcType=INTEGER},
               </if>
               <if test="sts != null">
                    sts = #{sts,jdbcType=CHAR},
               </if>
               <if test="systemId != null">
                    SYSTEM_ID = #{systemId,jdbcType=INTEGER},
               </if>
          </set>
          where ID = #{id,jdbcType=INTEGER}
     </update>
     <update id="updateByPrimaryKey" parameterType="com.ygjt.gdn.ftisp.model.RoleDo">
          update auth_role
          set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
               ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
               ENABLE = #{enable,jdbcType=INTEGER},
               ISSYS = #{issys,jdbcType=INTEGER},
               MODULE_ID = #{moduleId,jdbcType=VARCHAR},
               create_dt = #{createDt,jdbcType=TIMESTAMP},
               create_by = #{createBy,jdbcType=INTEGER},
               last_update_dt = #{lastUpdateDt,jdbcType=TIMESTAMP},
               last_update_by = #{lastUpdateBy,jdbcType=INTEGER},
               sts = #{sts,jdbcType=CHAR},
               SYSTEM_ID = #{systemId,jdbcType=INTEGER}
          where ID = #{id,jdbcType=INTEGER}
     </update>
</mapper>